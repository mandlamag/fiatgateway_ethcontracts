{
  "contractName": "WhitelistedTokenRegulatorProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "implementation",
          "type": "address"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_reg",
          "type": "address"
        }
      ],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.23;\n\nimport \"../permissionedToken/regulator/RegulatorProxy.sol\";\nimport \"./WhitelistedTokenRegulator.sol\";\n\n/**\n* @title WhitelistedTokenRegulatorProxy\n* @dev Accounts for regulatory requirement changes over time. \n* Routes the WhitelistedToken to the correct version of the WhitelistedTokenRegulator\n* service.\n*\n*/\ncontract WhitelistedTokenRegulatorProxy is RegulatorProxy {\n    /**\n     * @notice Claims ownership of a WhitelistedToken. Precondition: the\n     * previous owner of the WhitelistedToken already transferred ownership to \n     * this proxy.\n     * @param _reg The address of the WhitelistedToken contract.\n     */\n    function claimOwnership(address _reg) public onlyOwner {\n        WhitelistedTokenRegulator(_reg).claimOwnership();\n    }\n}",
  "sourcePath": "/Users/tanishqaggarwal/Documents/carbon/fiat_gateway/contracts/whitelistedToken/WhitelistedTokenRegulatorProxy.sol",
  "ast": {
    "absolutePath": "/Users/tanishqaggarwal/Documents/carbon/fiat_gateway/contracts/whitelistedToken/WhitelistedTokenRegulatorProxy.sol",
    "exportedSymbols": {
      "WhitelistedTokenRegulatorProxy": [
        4664
      ]
    },
    "id": 4665,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4645,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:40"
      },
      {
        "absolutePath": "/Users/tanishqaggarwal/Documents/carbon/fiat_gateway/contracts/permissionedToken/regulator/RegulatorProxy.sol",
        "file": "../permissionedToken/regulator/RegulatorProxy.sol",
        "id": 4646,
        "nodeType": "ImportDirective",
        "scope": 4665,
        "sourceUnit": 4241,
        "src": "26:59:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tanishqaggarwal/Documents/carbon/fiat_gateway/contracts/whitelistedToken/WhitelistedTokenRegulator.sol",
        "file": "./WhitelistedTokenRegulator.sol",
        "id": 4647,
        "nodeType": "ImportDirective",
        "scope": 4665,
        "sourceUnit": 4644,
        "src": "86:41:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4648,
              "name": "RegulatorProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4240,
              "src": "381:14:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RegulatorProxy_$4240",
                "typeString": "contract RegulatorProxy"
              }
            },
            "id": 4649,
            "nodeType": "InheritanceSpecifier",
            "src": "381:14:40"
          }
        ],
        "contractDependencies": [
          4240,
          5002,
          5351,
          5389,
          5464
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistedTokenRegulatorProxy\n@dev Accounts for regulatory requirement changes over time. \nRoutes the WhitelistedToken to the correct version of the WhitelistedTokenRegulator\nservice.\n",
        "fullyImplemented": false,
        "id": 4664,
        "linearizedBaseContracts": [
          4664,
          4240,
          5351,
          5464,
          5389,
          5002
        ],
        "name": "WhitelistedTokenRegulatorProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4662,
              "nodeType": "Block",
              "src": "710:65:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4657,
                            "name": "_reg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4651,
                            "src": "746:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4656,
                          "name": "WhitelistedTokenRegulator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4643,
                          "src": "720:25:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_WhitelistedTokenRegulator_$4643_$",
                            "typeString": "type(contract WhitelistedTokenRegulator)"
                          }
                        },
                        "id": 4658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "720:31:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WhitelistedTokenRegulator_$4643",
                          "typeString": "contract WhitelistedTokenRegulator"
                        }
                      },
                      "id": 4659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4915,
                      "src": "720:46:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "720:48:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4661,
                  "nodeType": "ExpressionStatement",
                  "src": "720:48:40"
                }
              ]
            },
            "documentation": "@notice Claims ownership of a WhitelistedToken. Precondition: the\nprevious owner of the WhitelistedToken already transferred ownership to \nthis proxy.\n@param _reg The address of the WhitelistedToken contract.",
            "id": 4663,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4654,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4653,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4950,
                  "src": "700:9:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "700:9:40"
              }
            ],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4651,
                  "name": "_reg",
                  "nodeType": "VariableDeclaration",
                  "scope": 4663,
                  "src": "679:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:14:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 4655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:40"
            },
            "scope": 4664,
            "src": "655:120:40",
            "stateMutability": "nonpayable",
            "superFunction": 4239,
            "visibility": "public"
          }
        ],
        "scope": 4665,
        "src": "338:439:40"
      }
    ],
    "src": "0:777:40"
  },
  "legacyAST": {
    "absolutePath": "/Users/tanishqaggarwal/Documents/carbon/fiat_gateway/contracts/whitelistedToken/WhitelistedTokenRegulatorProxy.sol",
    "exportedSymbols": {
      "WhitelistedTokenRegulatorProxy": [
        4664
      ]
    },
    "id": 4665,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4645,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:40"
      },
      {
        "absolutePath": "/Users/tanishqaggarwal/Documents/carbon/fiat_gateway/contracts/permissionedToken/regulator/RegulatorProxy.sol",
        "file": "../permissionedToken/regulator/RegulatorProxy.sol",
        "id": 4646,
        "nodeType": "ImportDirective",
        "scope": 4665,
        "sourceUnit": 4241,
        "src": "26:59:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tanishqaggarwal/Documents/carbon/fiat_gateway/contracts/whitelistedToken/WhitelistedTokenRegulator.sol",
        "file": "./WhitelistedTokenRegulator.sol",
        "id": 4647,
        "nodeType": "ImportDirective",
        "scope": 4665,
        "sourceUnit": 4644,
        "src": "86:41:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4648,
              "name": "RegulatorProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4240,
              "src": "381:14:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RegulatorProxy_$4240",
                "typeString": "contract RegulatorProxy"
              }
            },
            "id": 4649,
            "nodeType": "InheritanceSpecifier",
            "src": "381:14:40"
          }
        ],
        "contractDependencies": [
          4240,
          5002,
          5351,
          5389,
          5464
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistedTokenRegulatorProxy\n@dev Accounts for regulatory requirement changes over time. \nRoutes the WhitelistedToken to the correct version of the WhitelistedTokenRegulator\nservice.\n",
        "fullyImplemented": false,
        "id": 4664,
        "linearizedBaseContracts": [
          4664,
          4240,
          5351,
          5464,
          5389,
          5002
        ],
        "name": "WhitelistedTokenRegulatorProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4662,
              "nodeType": "Block",
              "src": "710:65:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4657,
                            "name": "_reg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4651,
                            "src": "746:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4656,
                          "name": "WhitelistedTokenRegulator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4643,
                          "src": "720:25:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_WhitelistedTokenRegulator_$4643_$",
                            "typeString": "type(contract WhitelistedTokenRegulator)"
                          }
                        },
                        "id": 4658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "720:31:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WhitelistedTokenRegulator_$4643",
                          "typeString": "contract WhitelistedTokenRegulator"
                        }
                      },
                      "id": 4659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4915,
                      "src": "720:46:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "720:48:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4661,
                  "nodeType": "ExpressionStatement",
                  "src": "720:48:40"
                }
              ]
            },
            "documentation": "@notice Claims ownership of a WhitelistedToken. Precondition: the\nprevious owner of the WhitelistedToken already transferred ownership to \nthis proxy.\n@param _reg The address of the WhitelistedToken contract.",
            "id": 4663,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4654,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4653,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4950,
                  "src": "700:9:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "700:9:40"
              }
            ],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4651,
                  "name": "_reg",
                  "nodeType": "VariableDeclaration",
                  "scope": 4663,
                  "src": "679:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:14:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 4655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:40"
            },
            "scope": 4664,
            "src": "655:120:40",
            "stateMutability": "nonpayable",
            "superFunction": 4239,
            "visibility": "public"
          }
        ],
        "scope": 4665,
        "src": "338:439:40"
      }
    ],
    "src": "0:777:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-17T03:21:38.657Z"
}