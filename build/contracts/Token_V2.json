{
  "contractName": "Token_V2",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50611e82806100206000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b146100eb578063095ea7b31461011a578063158ef93e1461016757806318160ddd1461019657806323b872dd146101c157806340c10f191461022e57806342966c681461027b57806366188463146102a857806370a08231146102f55780637d64bcb41461034c5780638da5cb5b14610363578063a9059cbb146103ba578063c4d66de814610407578063d73dd6231461044a578063dd62ed3e14610497578063f2fde38b1461050e575b600080fd5b3480156100f757600080fd5b50610100610551565b604051808215151515815260200191505060405180910390f35b34801561012657600080fd5b50610165600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b6565b005b34801561017357600080fd5b5061017c61075e565b604051808215151515815260200191505060405180910390f35b3480156101a257600080fd5b506101ab6107c3565b6040518082815260200191505060405180910390f35b3480156101cd57600080fd5b5061022c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081a565b005b34801561023a57600080fd5b50610279600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb5565b005b34801561028757600080fd5b506102a660048036038101908080359060200190929190505050610d66565b005b3480156102b457600080fd5b506102f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f65565b005b34801561030157600080fd5b50610336600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611164565b6040518082815260200191505060405180910390f35b34801561035857600080fd5b5061036161126e565b005b34801561036f57600080fd5b5061037861135a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103c657600080fd5b50610405600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113d2565b005b34801561041357600080fd5b50610448600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e9565b005b34801561045657600080fd5b50610495600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611772565b005b3480156104a357600080fd5b506104f8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061193e565b6040518082815260200191505060405180910390f35b34801561051a57600080fd5b5061054f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a7d565b005b60006004600060405180807f6d696e74696e6746696e69736865640000000000000000000000000000000000815250600f01905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16905090565b6000338360405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b6020831015156106a65780518252602082019150602081019050602083039250610681565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050816000808360001916600019168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60006004600060405180807f746f6b656e5f76315f696e697469616c697a6564000000000000000000000000815250601401905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16905090565b600080600060405180807f746f74616c537570706c79000000000000000000000000000000000000000000815250600b01905060405180910390206000191660001916815260200190815260200160002054905090565b60008060008460405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156108d957805182526020820191506020810190506020830392506108b4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902092508560405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156109c2578051825260208201915060208101905060208303925061099d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150853360405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515610adf5780518252602082019150602081019050602083039250610aba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515610b4a57600080fd5b8360008084600019166000191681526020019081526020016000205410151515610b7357600080fd5b8360008083600019166000191681526020019081526020016000205410151515610b9c57600080fd5b610bb784610ba988611164565b611b0690919063ffffffff16565b600080846000191660001916815260200190815260200160002081905550610bf084610be287611164565b611b1f90919063ffffffff16565b600080856000191660001916815260200190815260200160002081905550610c2a84610c1c883361193e565b611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3505050505050565b610cbd61135a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cf657600080fd5b610cfe610551565b151515610d0a57600080fd5b610d148282611b3b565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a25050565b60008082610d7333611164565b10151515610d8057600080fd5b60405180807f746f74616c537570706c79000000000000000000000000000000000000000000815250600b019050604051809103902091503360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515610e725780518252602082019150602081019050602083039250610e4d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050610ebb83610ead6107c3565b611b0690919063ffffffff16565b600080846000191660001916815260200190815260200160002081905550610ef483610ee633611164565b611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5846040518082815260200191505060405180910390a2505050565b600080610f72338561193e565b9150338460405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515611062578051825260208201915060208101905060208303925061103d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050818311156110be5760008060008360001916600019168152602001908152602001600020819055506110f0565b6110d18383611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925611149338861193e565b6040518082815260200191505060405180910390a350505050565b60008060008360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561122357805182526020820191506020810190506020830392506111fe565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020549050919050565b61127661135a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112af57600080fd5b6112b7610551565b1515156112c357600080fd5b60016004600060405180807f6d696e74696e6746696e69736865640000000000000000000000000000000000815250600f01905060405180910390206000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a1565b60006002600060405180807f6f776e6572000000000000000000000000000000000000000000000000000000815250600501905060405180910390206000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561148f578051825260208201915060208101905060208303925061146a565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091503360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156115785780518252602082019150602081019050602083039250611553565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156115e357600080fd5b826000808360001916600019168152602001908152602001600020541015151561160c57600080fd5b6116278361161933611164565b611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055506116608361165286611164565b611b1f90919063ffffffff16565b6000808460001916600019168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a350505050565b6116f161075e565b1515156116fd57600080fd5b61170681611d26565b60016004600060405180807f746f6b656e5f76315f696e697469616c697a6564000000000000000000000000815250601401905060405180910390206000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000338360405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515611862578051825260208201915060208101905060208303925061183d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506118ad8261189f338661193e565b611b1f90919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925611924338761193e565b6040518082815260200191505060405180910390a3505050565b6000806000848460405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515611a315780518252602082019150602081019050602083039250611a0c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905092915050565b611a8561135a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611abe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611afa57600080fd5b611b0381611d26565b50565b6000828211151515611b1457fe5b818303905092915050565b60008183019050828110151515611b3257fe5b80905092915050565b6000808360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611bf85780518252602082019150602081019050602083039250611bd3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915060405180807f746f74616c537570706c79000000000000000000000000000000000000000000815250600b01905060405180910390209050611c7a83611c6c86611164565b611b1f90919063ffffffff16565b600080846000191660001916815260200190815260200160002081905550611cb283611ca46107c3565b611b1f90919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a350505050565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0611d4f61135a565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806002600060405180807f6f776e6572000000000000000000000000000000000000000000000000000000815250600501905060405180910390206000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058201fead81578ffceb0c74fa3d65449710194c657e55ec175ee3ade92a9f48e7dad0029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b146100eb578063095ea7b31461011a578063158ef93e1461016757806318160ddd1461019657806323b872dd146101c157806340c10f191461022e57806342966c681461027b57806366188463146102a857806370a08231146102f55780637d64bcb41461034c5780638da5cb5b14610363578063a9059cbb146103ba578063c4d66de814610407578063d73dd6231461044a578063dd62ed3e14610497578063f2fde38b1461050e575b600080fd5b3480156100f757600080fd5b50610100610551565b604051808215151515815260200191505060405180910390f35b34801561012657600080fd5b50610165600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b6565b005b34801561017357600080fd5b5061017c61075e565b604051808215151515815260200191505060405180910390f35b3480156101a257600080fd5b506101ab6107c3565b6040518082815260200191505060405180910390f35b3480156101cd57600080fd5b5061022c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081a565b005b34801561023a57600080fd5b50610279600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb5565b005b34801561028757600080fd5b506102a660048036038101908080359060200190929190505050610d66565b005b3480156102b457600080fd5b506102f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f65565b005b34801561030157600080fd5b50610336600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611164565b6040518082815260200191505060405180910390f35b34801561035857600080fd5b5061036161126e565b005b34801561036f57600080fd5b5061037861135a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103c657600080fd5b50610405600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113d2565b005b34801561041357600080fd5b50610448600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e9565b005b34801561045657600080fd5b50610495600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611772565b005b3480156104a357600080fd5b506104f8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061193e565b6040518082815260200191505060405180910390f35b34801561051a57600080fd5b5061054f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a7d565b005b60006004600060405180807f6d696e74696e6746696e69736865640000000000000000000000000000000000815250600f01905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16905090565b6000338360405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b6020831015156106a65780518252602082019150602081019050602083039250610681565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050816000808360001916600019168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60006004600060405180807f746f6b656e5f76315f696e697469616c697a6564000000000000000000000000815250601401905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16905090565b600080600060405180807f746f74616c537570706c79000000000000000000000000000000000000000000815250600b01905060405180910390206000191660001916815260200190815260200160002054905090565b60008060008460405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156108d957805182526020820191506020810190506020830392506108b4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902092508560405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156109c2578051825260208201915060208101905060208303925061099d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150853360405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515610adf5780518252602082019150602081019050602083039250610aba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515610b4a57600080fd5b8360008084600019166000191681526020019081526020016000205410151515610b7357600080fd5b8360008083600019166000191681526020019081526020016000205410151515610b9c57600080fd5b610bb784610ba988611164565b611b0690919063ffffffff16565b600080846000191660001916815260200190815260200160002081905550610bf084610be287611164565b611b1f90919063ffffffff16565b600080856000191660001916815260200190815260200160002081905550610c2a84610c1c883361193e565b611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3505050505050565b610cbd61135a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cf657600080fd5b610cfe610551565b151515610d0a57600080fd5b610d148282611b3b565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a25050565b60008082610d7333611164565b10151515610d8057600080fd5b60405180807f746f74616c537570706c79000000000000000000000000000000000000000000815250600b019050604051809103902091503360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515610e725780518252602082019150602081019050602083039250610e4d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050610ebb83610ead6107c3565b611b0690919063ffffffff16565b600080846000191660001916815260200190815260200160002081905550610ef483610ee633611164565b611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5846040518082815260200191505060405180910390a2505050565b600080610f72338561193e565b9150338460405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515611062578051825260208201915060208101905060208303925061103d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050818311156110be5760008060008360001916600019168152602001908152602001600020819055506110f0565b6110d18383611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925611149338861193e565b6040518082815260200191505060405180910390a350505050565b60008060008360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561122357805182526020820191506020810190506020830392506111fe565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020549050919050565b61127661135a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112af57600080fd5b6112b7610551565b1515156112c357600080fd5b60016004600060405180807f6d696e74696e6746696e69736865640000000000000000000000000000000000815250600f01905060405180910390206000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a1565b60006002600060405180807f6f776e6572000000000000000000000000000000000000000000000000000000815250600501905060405180910390206000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561148f578051825260208201915060208101905060208303925061146a565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091503360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156115785780518252602082019150602081019050602083039250611553565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156115e357600080fd5b826000808360001916600019168152602001908152602001600020541015151561160c57600080fd5b6116278361161933611164565b611b0690919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055506116608361165286611164565b611b1f90919063ffffffff16565b6000808460001916600019168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a350505050565b6116f161075e565b1515156116fd57600080fd5b61170681611d26565b60016004600060405180807f746f6b656e5f76315f696e697469616c697a6564000000000000000000000000815250601401905060405180910390206000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000338360405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515611862578051825260208201915060208101905060208303925061183d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506118ad8261189f338661193e565b611b1f90919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925611924338761193e565b6040518082815260200191505060405180910390a3505050565b6000806000848460405160200180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260098152602001807f616c6c6f77616e6365000000000000000000000000000000000000000000000081525060200193505050506040516020818303038152906040526040518082805190602001908083835b602083101515611a315780518252602082019150602081019050602083039250611a0c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905092915050565b611a8561135a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611abe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611afa57600080fd5b611b0381611d26565b50565b6000828211151515611b1457fe5b818303905092915050565b60008183019050828110151515611b3257fe5b80905092915050565b6000808360405160200180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611bf85780518252602082019150602081019050602083039250611bd3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915060405180807f746f74616c537570706c79000000000000000000000000000000000000000000815250600b01905060405180910390209050611c7a83611c6c86611164565b611b1f90919063ffffffff16565b600080846000191660001916815260200190815260200160002081905550611cb283611ca46107c3565b611b1f90919063ffffffff16565b6000808360001916600019168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a350505050565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0611d4f61135a565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806002600060405180807f6f776e6572000000000000000000000000000000000000000000000000000000815250600501905060405180910390206000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058201fead81578ffceb0c74fa3d65449710194c657e55ec175ee3ade92a9f48e7dad0029",
  "sourceMap": "272:487:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:487:4;;;;;;;",
  "deployedSourceMap": "272:487:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:115:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;786:115:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:267:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2076:267:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:116:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;664:116:3;;;;;;;;;;;;;;;;;;;;;;;;;;;457:110:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;457:110:2;;;;;;;;;;;;;;;;;;;;;;;1361:709;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1361:709:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:127:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;907:127:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:393:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;363:393:4;;;;;;;;;;;;;;;;;;;;;;;;;;2702:507:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2702:507:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;573:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:137:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1040:137:3;;;;;;763:101:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;885:470:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:470:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:160:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;498:160:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:347:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2349:347:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;715:164:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:131:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1031:131:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:115:3;834:4;854:11;:41;866:28;;;;;;;;;;;;;;;;;;;854:41;;;;;;;;;;;;;;;;;;;;;;;;;;;847:48;;786:115;:::o;2076:267:2:-;2139:36;2212:10;2224:7;2188:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2188:44:2;;;2178:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2178:55:2;;;;;;;;;;;;;;;;2139:94;;2284:5;2240:11;:41;2252:28;2240:41;;;;;;;;;;;;;;;;;:49;;;;2322:7;2301:36;;2310:10;2301:36;;;2331:5;2301:36;;;;;;;;;;;;;;;;;;2076:267;;;:::o;664:116:3:-;708:4;728:11;:46;740:33;;;;;;;;;;;;;;;;;;;728:46;;;;;;;;;;;;;;;;;;;;;;;;;;;721:53;;664:116;:::o;457:110:2:-;501:7;524:11;:37;536:24;;;;;;;;;;;;;;;;;;;524:37;;;;;;;;;;;;;;;;;;517:44;;457:110;:::o;1361:709::-;1438:21;1505:23;1576:33;1494:2;1472:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1472:25:2;;;1462:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1462:36:2;;;;;;;;;;;;;;;;1438:60;;1563:4;1541:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1541:27:2;;;1531:38;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1531:38:2;;;;;;;;;;;;;;;;1505:64;;1646:4;1652:10;1622:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1622:41:2;;;1612:52;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1612:52:2;;;;;;;;;;;;;;;;1576:88;;1695:1;1681:16;;:2;:16;;;;1673:25;;;;;;;;1745:5;1713:11;:28;1725:15;1713:28;;;;;;;;;;;;;;;;;;:37;;1705:47;;;;;;;;1809:5;1767:11;:38;1779:25;1767:38;;;;;;;;;;;;;;;;;;:47;;1759:56;;;;;;;;1855:26;1875:5;1855:15;1865:4;1855:9;:15::i;:::-;:19;;:26;;;;:::i;:::-;1824:11;:28;1836:15;1824:28;;;;;;;;;;;;;;;;;:57;;;;1917:24;1935:5;1917:13;1927:2;1917:9;:13::i;:::-;:17;;:24;;;;:::i;:::-;1888:11;:26;1900:13;1888:26;;;;;;;;;;;;;;;;;:53;;;;1989:38;2021:5;1989:27;1999:4;2005:10;1989:9;:27::i;:::-;:31;;:38;;;;:::i;:::-;1948:11;:38;1960:25;1948:38;;;;;;;;;;;;;;;;;:79;;;;2054:2;2039:25;;2048:4;2039:25;;;2058:5;2039:25;;;;;;;;;;;;;;;;;;1361:709;;;;;;:::o;907:127:3:-;640:7:1;:5;:7::i;:::-;626:21;;:10;:21;;;618:30;;;;;;;;460:17:3;:15;:17::i;:::-;459:18;451:27;;;;;;;;980:21;991:2;995:5;980:10;:21::i;:::-;1018:2;1013:15;;;1022:5;1013:15;;;;;;;;;;;;;;;;;;907:127;;:::o;363:393:4:-;452:23;509:25;439:5;414:21;424:10;414:9;:21::i;:::-;:30;;406:39;;;;;;;;478:24;;;;;;;;;;;;;;;;;;;452:50;;569:10;547:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;547:33:4;;;537:44;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;537:44:4;;;;;;;;;;;;;;;;509:72;;619:24;637:5;619:13;:11;:13::i;:::-;:17;;:24;;;;:::i;:::-;588:11;:28;600:15;588:28;;;;;;;;;;;;;;;;;:55;;;;683:32;709:5;683:21;693:10;683:9;:21::i;:::-;:25;;:32;;;;:::i;:::-;650:11;:30;662:17;650:30;;;;;;;;;;;;;;;;;:65;;;;732:10;727:23;;;744:5;727:23;;;;;;;;;;;;;;;;;;363:393;;;:::o;2702:507:2:-;2784:16;2840:36;2803:30;2813:10;2825:7;2803:9;:30::i;:::-;2784:49;;2913:10;2925:7;2889:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2889:44:2;;;2879:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2879:55:2;;;;;;;;;;;;;;;;2840:94;;2963:8;2945:15;:26;2941:190;;;3026:1;2982:11;:41;2994:28;2982:41;;;;;;;;;;;;;;;;;:45;;;;2941:190;;;3094:29;3107:15;3094:8;:12;;:29;;;;:::i;:::-;3050:11;:41;3062:28;3050:41;;;;;;;;;;;;;;;;;:73;;;;2941:190;3163:7;3142:61;;3151:10;3142:61;;;3172:30;3182:10;3194:7;3172:9;:30::i;:::-;3142:61;;;;;;;;;;;;;;;;;;2702:507;;;;:::o;573:136::-;628:7;651:11;:52;695:5;673:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;673:28:2;;;663:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;663:39:2;;;;;;;;;;;;;;;;651:52;;;;;;;;;;;;;;;;;;644:59;;573:136;;;:::o;1040:137:3:-;640:7:1;:5;:7::i;:::-;626:21;;:10;:21;;;618:30;;;;;;;;460:17:3;:15;:17::i;:::-;459:18;451:27;;;;;;;;1141:4;1097:11;:41;1109:28;;;;;;;;;;;;;;;;;;;1097:41;;;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;1157:14;;;;;;;;;;1040:137::o;763:101:1:-;801:7;824:14;:34;839:18;;;;;;;;;;;;;;;;;;;824:34;;;;;;;;;;;;;;;;;;;;;;;;;;;817:41;;763:101;:::o;885:470:2:-;944:21;1011:25;1000:2;978:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;978:25:2;;;968:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;968:36:2;;;;;;;;;;;;;;;;944:60;;1071:10;1049:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1049:33:2;;;1039:44;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1039:44:2;;;;;;;;;;;;;;;;1011:72;;1114:1;1100:16;;:2;:16;;;;1092:25;;;;;;;;1166:5;1132:11;:30;1144:17;1132:30;;;;;;;;;;;;;;;;;;:39;;1124:48;;;;;;;;1214:32;1240:5;1214:21;1224:10;1214:9;:21::i;:::-;:25;;:32;;;;:::i;:::-;1181:11;:30;1193:17;1181:30;;;;;;;;;;;;;;;;;:65;;;;1282:24;1300:5;1282:13;1292:2;1282:9;:13::i;:::-;:17;;:24;;;;:::i;:::-;1253:11;:26;1265:13;1253:26;;;;;;;;;;;;;;;;;:53;;;;1339:2;1318:31;;1327:10;1318:31;;;1343:5;1318:31;;;;;;;;;;;;;;;;;;885:470;;;;:::o;498:160:3:-;556:13;:11;:13::i;:::-;555:14;547:23;;;;;;;;577:15;586:5;577:8;:15::i;:::-;648:4;599:11;:46;611:33;;;;;;;;;;;;;;;;;;;599:46;;;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;498:160;:::o;2349:347:2:-;2426:36;2499:10;2511:7;2475:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2475:44:2;;;2465:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2465:55:2;;;;;;;;;;;;;;;;2426:94;;2571:46;2606:10;2571:30;2581:10;2593:7;2571:9;:30::i;:::-;:34;;:46;;;;:::i;:::-;2527:11;:41;2539:28;2527:41;;;;;;;;;;;;;;;;;:90;;;;2650:7;2629:61;;2638:10;2629:61;;;2659:30;2669:10;2681:7;2659:9;:30::i;:::-;2629:61;;;;;;;;;;;;;;;;;;2349:347;;;:::o;715:164::-;787:7;810:11;:63;856:5;863:7;832:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;832:39:2;;;822:50;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;822:50:2;;;;;;;;;;;;;;;;810:63;;;;;;;;;;;;;;;;;;803:70;;715:164;;;;:::o;1031:131:1:-;640:7;:5;:7::i;:::-;626:21;;:10;:21;;;618:30;;;;;;;;1128:1;1108:22;;:8;:22;;;;1100:31;;;;;;;;1138:18;1147:8;1138;:18::i;:::-;1031:131;:::o;1042:110:6:-;1100:7;1127:1;1122;:6;;1115:14;;;;;;1146:1;1142;:5;1135:12;;1042:110;;;;:::o;1214:123::-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;3215:338:2:-;3270:21;3337:23;3326:2;3304:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3304:25:2;;;3294:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3294:36:2;;;;;;;;;;;;;;;;3270:60;;3363:24;;;;;;;;;;;;;;;;;;;3337:50;;3425:24;3443:5;3425:13;3435:2;3425:9;:13::i;:::-;:17;;:24;;;;:::i;:::-;3396:11;:26;3408:13;3396:26;;;;;;;;;;;;;;;;;:53;;;;3487:24;3505:5;3487:13;:11;:13::i;:::-;:17;;:24;;;;:::i;:::-;3456:11;:28;3468:15;3456:28;;;;;;;;;;;;;;;;;:55;;;;3537:2;3523:24;;3532:3;3523:24;3541:5;3523:24;;;;;;;;;;;;;;;;;;3215:338;;;;:::o;1218:154:1:-;1275:39;1296:7;:5;:7::i;:::-;1305:8;1275:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:8;1321:14;:34;1336:18;;;;;;;;;;;;;;;;;;;1321:34;;;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;1218:154;:::o",
  "source": "pragma solidity ^0.4.23;\r\n\r\nimport './Token_V1.sol';\r\n\r\n/**\r\n * @title Token_V2\r\n * @dev Version 2 of a token to show upgradeability.\r\n * The idea here is to extend a token behaviour providing burnable functionalities\r\n * in addition to what's provided in version 1\r\n */\r\ncontract Token_V2 is Token_V1 {\r\n  event Burn(address indexed burner, uint256 value);\r\n\r\n  function burn(uint256 value) public {\r\n    require(balanceOf(msg.sender) >= value);\r\n    bytes32 totalSupplyHash = keccak256(\"totalSupply\");\r\n    bytes32 balanceSenderHash = keccak256(abi.encode(\"balance\", msg.sender));\r\n    uintStorage[totalSupplyHash] = totalSupply().sub(value);\r\n    uintStorage[balanceSenderHash] = balanceOf(msg.sender).sub(value);\r\n    emit Burn(msg.sender, value);\r\n  }\r\n}",
  "sourcePath": "C:\\Users\\npain\\Projects\\Carbon\\fiat_gateway\\contracts\\test\\Token_V2.sol",
  "ast": {
    "absolutePath": "/C/Users/npain/Projects/Carbon/fiat_gateway/contracts/test/Token_V2.sol",
    "exportedSymbols": {
      "Token_V2": [
        739
      ]
    },
    "id": 740,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 669,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/C/Users/npain/Projects/Carbon/fiat_gateway/contracts/test/Token_V1.sol",
        "file": "./Token_V1.sol",
        "id": 670,
        "nodeType": "ImportDirective",
        "scope": 740,
        "sourceUnit": 668,
        "src": "28:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 671,
              "name": "Token_V1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 667,
              "src": "293:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_V1_$667",
                "typeString": "contract Token_V1"
              }
            },
            "id": 672,
            "nodeType": "InheritanceSpecifier",
            "src": "293:8:4"
          }
        ],
        "contractDependencies": [
          26,
          102,
          549,
          667
        ],
        "contractKind": "contract",
        "documentation": "@title Token_V2\r\n@dev Version 2 of a token to show upgradeability.\r\nThe idea here is to extend a token behaviour providing burnable functionalities\r\nin addition to what's provided in version 1\r",
        "fullyImplemented": true,
        "id": 739,
        "linearizedBaseContracts": [
          739,
          667,
          102,
          549,
          26
        ],
        "name": "Token_V2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 678,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "indexed": true,
                  "name": "burner",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "318:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "342:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:39:4"
            },
            "src": "307:50:4"
          },
          {
            "body": {
              "id": 737,
              "nodeType": "Block",
              "src": "399:357:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 685,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "424:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "424:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 684,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "414:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "414:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 688,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "439:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "414:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 683,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1007,
                        1008
                      ],
                      "referencedDeclaration": 1007,
                      "src": "406:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "406:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "406:39:4"
                },
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "name": "totalSupplyHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "452:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 692,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "452:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "746f74616c537570706c79",
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "488:13:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d",
                          "typeString": "literal_string \"totalSupply\""
                        },
                        "value": "totalSupply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7c80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d",
                          "typeString": "literal_string \"totalSupply\""
                        }
                      ],
                      "id": 694,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "478:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "452:50:4"
                },
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "name": "balanceSenderHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "509:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 698,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "509:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 708,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "62616c616e6365",
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "558:9:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                              "typeString": "literal_string \"balance\""
                            },
                            "value": "balance"
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 704,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "569:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "569:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                              "typeString": "literal_string \"balance\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 701,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "547:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "547:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "547:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 700,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "537:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "509:72:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "uintStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "588:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 711,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "totalSupplyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "600:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "588:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 715,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "637:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 712,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "619:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "619:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 964,
                        "src": "619:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "619:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "588:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "588:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 719,
                        "name": "uintStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "650:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 721,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 720,
                        "name": "balanceSenderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "662:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "650:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 727,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "709:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 723,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "693:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "693:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 722,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "683:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 964,
                        "src": "683:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "650:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "650:65:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 732,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "732:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "732:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "744:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 731,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "727:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "727:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "EmitStatement",
                  "src": "722:28:4"
                }
              ]
            },
            "documentation": null,
            "id": 738,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "377:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "376:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "399:0:4"
            },
            "scope": 739,
            "src": "363:393:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 740,
        "src": "272:487:4"
      }
    ],
    "src": "0:759:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/npain/Projects/Carbon/fiat_gateway/contracts/test/Token_V2.sol",
    "exportedSymbols": {
      "Token_V2": [
        739
      ]
    },
    "id": 740,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 669,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/C/Users/npain/Projects/Carbon/fiat_gateway/contracts/test/Token_V1.sol",
        "file": "./Token_V1.sol",
        "id": 670,
        "nodeType": "ImportDirective",
        "scope": 740,
        "sourceUnit": 668,
        "src": "28:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 671,
              "name": "Token_V1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 667,
              "src": "293:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_V1_$667",
                "typeString": "contract Token_V1"
              }
            },
            "id": 672,
            "nodeType": "InheritanceSpecifier",
            "src": "293:8:4"
          }
        ],
        "contractDependencies": [
          26,
          102,
          549,
          667
        ],
        "contractKind": "contract",
        "documentation": "@title Token_V2\r\n@dev Version 2 of a token to show upgradeability.\r\nThe idea here is to extend a token behaviour providing burnable functionalities\r\nin addition to what's provided in version 1\r",
        "fullyImplemented": true,
        "id": 739,
        "linearizedBaseContracts": [
          739,
          667,
          102,
          549,
          26
        ],
        "name": "Token_V2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 678,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "indexed": true,
                  "name": "burner",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "318:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "342:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:39:4"
            },
            "src": "307:50:4"
          },
          {
            "body": {
              "id": 737,
              "nodeType": "Block",
              "src": "399:357:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 685,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "424:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "424:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 684,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "414:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "414:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 688,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "439:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "414:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 683,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1007,
                        1008
                      ],
                      "referencedDeclaration": 1007,
                      "src": "406:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "406:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "406:39:4"
                },
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "name": "totalSupplyHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "452:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 692,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "452:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "746f74616c537570706c79",
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "488:13:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d",
                          "typeString": "literal_string \"totalSupply\""
                        },
                        "value": "totalSupply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7c80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d",
                          "typeString": "literal_string \"totalSupply\""
                        }
                      ],
                      "id": 694,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "478:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "452:50:4"
                },
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "name": "balanceSenderHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "509:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 698,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "509:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 708,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "62616c616e6365",
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "558:9:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                              "typeString": "literal_string \"balance\""
                            },
                            "value": "balance"
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 704,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "569:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "569:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                              "typeString": "literal_string \"balance\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 701,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "547:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "547:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "547:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 700,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "537:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "509:72:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "uintStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "588:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 711,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "totalSupplyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "600:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "588:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 715,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "637:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 712,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "619:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "619:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 964,
                        "src": "619:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "619:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "588:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "588:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 719,
                        "name": "uintStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "650:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 721,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 720,
                        "name": "balanceSenderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "662:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "650:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 727,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "709:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 723,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "693:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "693:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 722,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "683:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 964,
                        "src": "683:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "650:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "650:65:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 732,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "732:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "732:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "744:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 731,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "727:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "727:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "EmitStatement",
                  "src": "722:28:4"
                }
              ]
            },
            "documentation": null,
            "id": 738,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "377:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "376:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "399:0:4"
            },
            "scope": 739,
            "src": "363:393:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 740,
        "src": "272:487:4"
      }
    ],
    "src": "0:759:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-15T16:33:07.888Z"
}